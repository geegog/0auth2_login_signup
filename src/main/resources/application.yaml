spring:
  datasource:
    url: jdbc:mysql://localhost:3306/spring_social?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false
    username: root
    password: ${DB_PASSWORD}

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 599956297395-ae9ukq4eti1q1urm9i074pbcfhv5h9kl.apps.googleusercontent.com
            clientSecret: _2rbzwMojxmnf9as5aVPQsxZ
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 462513464536447
            clientSecret: f2e94ed6aa2edf033cacc89a53a0fc10
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: Iv1.f6f8358857e6a877
            clientSecret: 92b2312ecee50a750f3e22545a38a08318263189
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: CE495833EFDE42B91B4F47EE1133E577C6989E75C2721FBBF296B831CF04F45434EBC14DBC73FFACA0B2881C0D9221F0EBA162D704494B9EEC401477172618CE
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
